{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-testkishore-001"
		},
		"ls_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob'"
		},
		"ls_sqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sqldb'"
		},
		"ls_sqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlserver-testkishore-001.database.windows.net"
		},
		"ls_sqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb-testkishore-001"
		},
		"ls_sqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "dbadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_sqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sqldb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_q1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"sheet_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Q1"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheet_name",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": "q1-container"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "phone_no",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "designation_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Q1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_dump_into_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dump Employee details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blob_q1",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@concat(pipeline().parameters.table_name, '.xlsx')\r\n",
										"type": "Expression"
									},
									"sheet_name": {
										"value": "@pipeline().parameters.sheet_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@pipeline().parameters.schema_name",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table_name": {
						"type": "string"
					},
					"sheet_name": {
						"type": "string",
						"defaultValue": "Sheet1"
					},
					"schema_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Q1/Staging"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_q1')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_perp_change_datatype_employee')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Q1"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "EmployeeTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "UserTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "SurveyTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "FormQuestionTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "FormOptionTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "FormInstanceTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "SurveyStatusTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepSchemaEmployee"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepUserTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepSurveyTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepFormQuestionTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepFormOptionTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepFormInstanceTable"
						},
						{
							"dataset": {
								"referenceName": "ds_sqldb_table",
								"type": "DatasetReference"
							},
							"name": "PrepSurveyStatusTable"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          DOB as string,",
						"          gender as string,",
						"          phone_no as string,",
						"          status as string,",
						"          designation_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> EmployeeTable",
						"source(output(",
						"          emp_id as integer,",
						"          email as string,",
						"          password as string,",
						"          role as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> UserTable",
						"source(output(",
						"          id as integer,",
						"          title as string,",
						"          status as string,",
						"          target_role_id as integer,",
						"          creator_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SurveyTable",
						"source(output(",
						"          id as integer,",
						"          question_type as string,",
						"          survey_id as integer,",
						"          value as string,",
						"          qn_no as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> FormQuestionTable",
						"source(output(",
						"          id as integer,",
						"          qn_id as integer,",
						"          value as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> FormOptionTable",
						"source(output(",
						"          id as integer,",
						"          survey_id as integer,",
						"          qn_id as integer,",
						"          value as string,",
						"          emp_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> FormInstanceTable",
						"source(output(",
						"          survey_id as integer,",
						"          emp_id as integer,",
						"          status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SurveyStatusTable",
						"EmployeeTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepSchemaEmployee",
						"UserTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepUserTable",
						"SurveyTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepSurveyTable",
						"FormQuestionTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepFormQuestionTable",
						"FormOptionTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepFormOptionTable",
						"FormInstanceTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepFormInstanceTable",
						"SurveyStatusTable sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PrepSurveyStatusTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_prep_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_perp_change_datatype_employee",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "employees"
									},
									"UserTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "users"
									},
									"SurveyTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "surveys"
									},
									"FormQuestionTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "form_questions"
									},
									"FormOptionTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "form_options"
									},
									"FormInstanceTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "form_instances"
									},
									"SurveyStatusTable": {
										"schema_name": {
											"value": "@pipeline().parameters.source_schema_name",
											"type": "Expression"
										},
										"table_name": "survey_status"
									},
									"PrepSchemaEmployee": {
										"schema_name": {
											"value": "@pipeline().parameters.target_schema_name",
											"type": "Expression"
										},
										"table_name": "employees"
									},
									"PrepUserTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "users"
									},
									"PrepSurveyTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "surveys"
									},
									"PrepFormQuestionTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "form_questions"
									},
									"PrepFormOptionTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "form_options"
									},
									"PrepFormInstanceTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "form_instances"
									},
									"PrepSurveyStatusTable": {
										"schema_name": "@pipeline().parameters.target_schema_name",
										"table_name": "survey_status"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_schema_name": {
						"type": "string",
						"defaultValue": "staging"
					},
					"target_schema_name": {
						"type": "string",
						"defaultValue": "prep"
					}
				},
				"folder": {
					"name": "Q1/Preparation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_perp_change_datatype_employee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dump employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "employees",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump users",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "users",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump surveys",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "surveys",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump survey status",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "survey_status",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump Form Questions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "form_questions",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump Form Options",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "form_options",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dump Form Instance",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_dump_into_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"table_name": "form_instances",
								"sheet_name": {
									"value": "@pipeline().parameters.sheet_name",
									"type": "Expression"
								},
								"schema_name": {
									"value": "@pipeline().parameters.schema_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema_name": {
						"type": "string",
						"defaultValue": "staging"
					},
					"sheet_name": {
						"type": "string",
						"defaultValue": "Sheet1"
					}
				},
				"folder": {
					"name": "Q1/Staging"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_stage_dump_into_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Staging pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"schema_name": "staging",
								"sheet_name": "Sheet1"
							}
						}
					},
					{
						"name": "Perparation Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Staging pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_prep_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"source_schema_name": "staging",
								"target_schema_name": "prep"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Q1"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_stage_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_prep_master')]"
			]
		}
	]
}